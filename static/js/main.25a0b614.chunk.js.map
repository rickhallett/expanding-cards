{"version":3,"sources":["components/Panel.js","App.js","reportWebVitals.js","index.js"],"names":["Panel","url","text","active","makePanelActive","idx","className","style","backgroundImage","onClick","panels","preserveThis","test","App","setState","prevState","map","p","i","console","log","state","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAAaA,EAAQ,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,IAAKC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,gBAAiBC,EAAU,EAAVA,IAK1D,OACE,qBACEC,UAAS,gBAAWH,EAAS,SAAW,MACxCI,MAAO,CACLC,gBAAgB,uBAAD,OACPP,EADO,oBAIjBQ,QAZgB,WAClBL,EAAgBC,IAIhB,SASE,6BAAKH,OCXLQ,G,MAAS,CACb,CACET,IAAK,wLACLC,KAAM,UACNC,QAAQ,GAEV,CACEF,IAAK,gLACLC,KAAM,WACNC,QAAQ,GAEV,CACEF,IAAK,gLACLC,KAAM,YACNC,QAAQ,GAEV,CACEF,IAAK,gLACLC,KAAM,SACNC,QAAQ,GAEV,CACEF,IAAK,wLACLC,KAAM,aACNC,QAAQ,KAINQ,EAAe,CAAEC,KAAM,QAwCdC,E,kDArCb,aAAe,IAAD,8BACZ,gBAIFT,gBAAkB,SAACC,GACjB,EAAKS,UACH,SAACC,GACC,OAAO,2BACFA,GADL,IAEEL,OAAQK,EAAUL,OAAOM,KAAI,SAACC,EAAGC,GAC/B,OAAO,2BAAKD,GAAZ,IAAed,OAASc,EAAEd,OAASe,IAAMb,YAI/C,kBAAMc,QAAQC,IAAI,EAAKC,WAbzB,EAAKA,MAAQ,CAAEX,SAAQC,gBAFX,E,0CAmBd,WAAU,IAAD,OACP,OACE,qBAAKL,UAAU,YAAf,SACGgB,KAAKD,MAAMX,OAAOM,KAAI,SAACC,EAAGC,GAAJ,OACrB,cAAC,EAAD,CAEEb,IAAKa,EACLjB,IAAKgB,EAAEhB,IACPC,KAAMe,EAAEf,KACRC,OAAQc,EAAEd,OACVC,gBAAiB,EAAKA,iBALjBc,Y,GAzBCK,IAAMC,WCtBTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.25a0b614.chunk.js","sourcesContent":["export const Panel = ({ url, text, active, makePanelActive, idx }) => {\n  const handleClick = () => {\n    makePanelActive(idx);\n  };\n\n  return (\n    <div\n      className={`panel ${active ? \"active\" : null}`}\n      style={{\n        backgroundImage: `url(\n              ${url}\n            )`,\n      }}\n      onClick={handleClick}\n    >\n      <h3>{text}</h3>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Panel } from \"./components/Panel\";\nimport \"./App.css\";\n\nconst panels = [\n  {\n    url: \"https://images.unsplash.com/photo-1621962960382-08f5a216dd3f?ixid=MnwxMjA3fDB8MHx0b3BpYy1mZWVkfDE0fDZzTVZqVExTa2VRfHxlbnwwfHx8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\",\n    text: \"flowers\",\n    active: false,\n  },\n  {\n    url: \"https://images.unsplash.com/photo-1619290978729-92225fd832ef?ixid=MnwxMjA3fDB8MHx0b3BpYy1mZWVkfDZ8NnNNVmpUTFNrZVF8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\",\n    text: \"organica\",\n    active: true,\n  },\n  {\n    url: \"https://images.unsplash.com/photo-1517800497904-3253a0f38be5?ixid=MnwxMjA3fDB8MHx0b3BpYy1mZWVkfDd8NnNNVmpUTFNrZVF8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\",\n    text: \"waterfall\",\n    active: false,\n  },\n  {\n    url: \"https://images.unsplash.com/photo-1623171959896-1c81bed7f8fb?ixid=MnwxMjA3fDB8MHx0b3BpYy1mZWVkfDF8NnNNVmpUTFNrZVF8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\",\n    text: \"a bird\",\n    active: false,\n  },\n  {\n    url: \"https://images.unsplash.com/photo-1605639227732-f95a6ace02ea?ixid=MnwxMjA3fDB8MHx0b3BpYy1mZWVkfDEyfDZzTVZqVExTa2VRfHxlbnwwfHx8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\",\n    text: \"just plain\",\n    active: false,\n  },\n];\n\nconst preserveThis = { test: \"data\" };\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = { panels, preserveThis };\n  }\n\n  makePanelActive = (idx) => {\n    this.setState(\n      (prevState) => {\n        return {\n          ...prevState,\n          panels: prevState.panels.map((p, i) => {\n            return { ...p, active: (p.active = i === idx) };\n          }),\n        };\n      },\n      () => console.log(this.state)\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        {this.state.panels.map((p, i) => (\n          <Panel\n            key={i}\n            idx={i}\n            url={p.url}\n            text={p.text}\n            active={p.active}\n            makePanelActive={this.makePanelActive}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}